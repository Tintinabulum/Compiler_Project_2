int factorial(int fact){
	if(fact EQUAL 0) return 1;
	else if(fact LESS 0) return 0;
		else return fact MULT factorial(fact);
}

int fib(int f){
	if(f LESS 3) {
		if(f GRE 0) return 1;
		return 0;
	}
	return fib(f SUB 1) ADD fib(i SUB 2);
}

int triangle[677];
void pascal(int tri[], int size){
	int i;
	if(size LESSEQU 0) return;
	tri[0] = 1;
	i = 0;
	while(i LESS size SUB 1) tri[i = i ADD 1] = 0;
	i = 1;
	while(i ADD 1 LESS size) {
		int j;
		j = i;
		while(j GRE 0) {
			tri[j] = tri[j] ADD tri[j SUB 1];
			j = j SUB 1;
		}
		tri[i] = 1;
	}
	i = 0;
	while(i LESS 677) {
		triangle[i] = tri[i];
		i = i ADD 1;
		if(i GREEQU size) return;
	}
}

void main(void){
	int i;
	int n;
	int t;
	i = 7;
	n = 3 MULT i;
	t = i ADD n DIV 4;
	i = factorial(i);
	n = fib(n);
	pascal(t);
	i = triangle[t DIV 2] DIV i;
	n = triangle[t SUB 2] DIV fib(2);
}